@startuml
'https://plantuml.com/class-diagram
title Basic with array
center header C# | Collections | Generic
'''''''''''''
'TODO: DICTIONARIES ALL HIERARCHY
'TODO: SETS ALL HIERARCHY
'TODO: NON GENERICS!

class NativeArray
{
+<T>[]() {constructor}
}

class ReadOnlyCollection<T>
{
    +Items: IList<T>
}

class List<T>
{
    +Capacity: int {get;}
    
    +AddRange(IEnumerable<T>): void
    +AsReadOnly(): ReadOnlyCollection<T>
    {method}...
    +IndexOf(T): int
    {method}...
}

abstract class Array
{
    +{static}Empty<T>(): T[0]
    +{static}AsReadOnly<T>(array: T[]): ReadOnlyCollection<T>
    {method}...  
}

class Stack<T>
{
    +Peek(): T
    +Pop(): T
    +Push(item: T): void
}

class Queue<T>
{
    +Enqueue(item: T)
    +Dequeue(): T
    +Peek(): T
}

class HashSet<T>
{
    +UnionWith(other IEnumerable<T>)
    +IntersectWith(other IEnumerable<T>)
    +ExceptWith(other IEnumerable<T>)
    {method}...
}

class  Enumerable<T> <<Static>> 
{
    +{static}Empty<T>(): IEnumerable<T>
    +{static}Range<T>(): IEnumerable<T>
    +{static}Repeat<T>(): IEnumerable<T>
}

interface IList<T>
{
    +Item[int] {indexer}
}

interface IReadOnlyList<T>
{
    +Item[int] {indexer}
}

interface IReadOnlyCollection<T>
{
    +Count: int {get;}
}

interface ICollection<T>
{
    +Count: int {get;}
    +IsReadOnly: bool {get;}
    
    +Add(T): void 
    +Clear(): void 
    +Contains(T): bool 
    +CopyTo(T[], int): void
    +Remove(T): void 
}

interface IEnumerable<T>
{
    +GetEnumerator()
}

'''''''''''''

ReadOnlyCollection ..|> IList
ReadOnlyCollection ..|> IReadOnlyList

List..|>IList
List..|>IReadOnlyList

remove NativeN
note as NativeN
This stands for
common C# arrays:
Example: int[] intArray;*
end note
NativeN .. NativeArray

remove ArrayN
note as ArrayN
This stands for
Array class, a class
C# provides to deal with
array-related operations.
end note
ArrayN .. Array

remove ArraysN
Note as ArraysN #gold
These both types
are NOT related!!!
(hierarchically)
end note
ArraysN .. ArrayN
ArraysN .u. NativeN

NativeArray ...|> IReadOnlyList
NativeArray ...|> IList

ReadOnlyCollection <.u. Array

IReadOnlyList--|>IReadOnlyCollection

IList --|> ICollection
ICollection --|> IEnumerable

IReadOnlyCollection --|> IEnumerable

Enumerable ..> IEnumerable

Stack ..|> IEnumerable
Stack ..|> IReadOnlyCollection

Queue ..|> IEnumerable
Queue ..|> IReadOnlyCollection

HashSet ..|> ICollection
HashSet ..|> IEnumerable
HashSet ..|> IReadOnlyCollection
note on link : .NET >= 4.6

'''''''''''''
right footer (CC-BY) RGV, 2021
@enduml